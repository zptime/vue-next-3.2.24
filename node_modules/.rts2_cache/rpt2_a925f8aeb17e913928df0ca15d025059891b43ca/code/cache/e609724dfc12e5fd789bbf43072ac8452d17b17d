{"code":"import { extend, looseEqual, looseIndexOf, NOOP, toDisplayString, toNumber } from '@vue/shared';\r\nimport { getCompatChildren } from './instanceChildren';\r\nimport { assertCompatEnabled, isCompatEnabled } from './compatConfig';\r\nimport { off, on, once } from './instanceEventEmitter';\r\nimport { getCompatListeners } from './instanceListeners';\r\nimport { shallowReadonly } from '@vue/reactivity';\r\nimport { legacySlotProxyHandlers } from './componentFunctional';\r\nimport { compatH } from './renderFn';\r\nimport { createCommentVNode, createTextVNode } from '../vnode';\r\nimport { renderList } from '../helpers/renderList';\r\nimport { legacyBindDynamicKeys, legacyBindObjectListeners, legacyBindObjectProps, legacyCheckKeyCodes, legacyMarkOnce, legacyPrependModifier, legacyRenderSlot, legacyRenderStatic, legacyresolveScopedSlots } from './renderHelpers';\r\nimport { resolveFilter } from '../helpers/resolveAssets';\r\nimport { resolveMergedOptions } from '../componentOptions';\r\nexport function installCompatInstanceProperties(map) {\r\n    const set = (target, key, val) => {\r\n        target[key] = val;\r\n    };\r\n    const del = (target, key) => {\r\n        delete target[key];\r\n    };\r\n    extend(map, {\r\n        $set: i => {\r\n            assertCompatEnabled(\"INSTANCE_SET\" /* INSTANCE_SET */, i);\r\n            return set;\r\n        },\r\n        $delete: i => {\r\n            assertCompatEnabled(\"INSTANCE_DELETE\" /* INSTANCE_DELETE */, i);\r\n            return del;\r\n        },\r\n        $mount: i => {\r\n            assertCompatEnabled(\"GLOBAL_MOUNT\" /* GLOBAL_MOUNT */, null /* this warning is global */);\r\n            // root mount override from ./global.ts in installCompatMount\r\n            return i.ctx._compat_mount || NOOP;\r\n        },\r\n        $destroy: i => {\r\n            assertCompatEnabled(\"INSTANCE_DESTROY\" /* INSTANCE_DESTROY */, i);\r\n            // root destroy override from ./global.ts in installCompatMount\r\n            return i.ctx._compat_destroy || NOOP;\r\n        },\r\n        // overrides existing accessor\r\n        $slots: i => {\r\n            if (isCompatEnabled(\"RENDER_FUNCTION\" /* RENDER_FUNCTION */, i) &&\r\n                i.render &&\r\n                i.render._compatWrapped) {\r\n                return new Proxy(i.slots, legacySlotProxyHandlers);\r\n            }\r\n            return __DEV__ ? shallowReadonly(i.slots) : i.slots;\r\n        },\r\n        $scopedSlots: i => {\r\n            assertCompatEnabled(\"INSTANCE_SCOPED_SLOTS\" /* INSTANCE_SCOPED_SLOTS */, i);\r\n            const res = {};\r\n            for (const key in i.slots) {\r\n                const fn = i.slots[key];\r\n                if (!fn._ns /* non-scoped slot */) {\r\n                    res[key] = fn;\r\n                }\r\n            }\r\n            return res;\r\n        },\r\n        $on: i => on.bind(null, i),\r\n        $once: i => once.bind(null, i),\r\n        $off: i => off.bind(null, i),\r\n        $children: getCompatChildren,\r\n        $listeners: getCompatListeners\r\n    });\r\n    /* istanbul ignore if */\r\n    if (isCompatEnabled(\"PRIVATE_APIS\" /* PRIVATE_APIS */, null)) {\r\n        extend(map, {\r\n            // needed by many libs / render fns\r\n            $vnode: i => i.vnode,\r\n            // inject addtional properties into $options for compat\r\n            // e.g. vuex needs this.$options.parent\r\n            $options: i => {\r\n                const res = extend({}, resolveMergedOptions(i));\r\n                res.parent = i.proxy.$parent;\r\n                res.propsData = i.vnode.props;\r\n                return res;\r\n            },\r\n            // some private properties that are likely accessed...\r\n            _self: i => i.proxy,\r\n            _uid: i => i.uid,\r\n            _data: i => i.data,\r\n            _isMounted: i => i.isMounted,\r\n            _isDestroyed: i => i.isUnmounted,\r\n            // v2 render helpers\r\n            $createElement: () => compatH,\r\n            _c: () => compatH,\r\n            _o: () => legacyMarkOnce,\r\n            _n: () => toNumber,\r\n            _s: () => toDisplayString,\r\n            _l: () => renderList,\r\n            _t: i => legacyRenderSlot.bind(null, i),\r\n            _q: () => looseEqual,\r\n            _i: () => looseIndexOf,\r\n            _m: i => legacyRenderStatic.bind(null, i),\r\n            _f: () => resolveFilter,\r\n            _k: i => legacyCheckKeyCodes.bind(null, i),\r\n            _b: () => legacyBindObjectProps,\r\n            _v: () => createTextVNode,\r\n            _e: () => createCommentVNode,\r\n            _u: () => legacyresolveScopedSlots,\r\n            _g: () => legacyBindObjectListeners,\r\n            _d: () => legacyBindDynamicKeys,\r\n            _p: () => legacyPrependModifier\r\n        });\r\n    }\r\n}\r\n","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/componentPublicInstance.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/instanceChildren.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/compatConfig.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/instanceEventEmitter.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/instanceListeners.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/reactivity/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/componentFunctional.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/renderFn.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/vnode.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/helpers/renderList.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/renderHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/helpers/resolveAssets.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/componentSlots.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/componentRenderContext.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/componentOptions.ts"]}
