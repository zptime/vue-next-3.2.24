{"code":"export const FRAGMENT = Symbol(__DEV__ ? `Fragment` : ``);\r\nexport const TELEPORT = Symbol(__DEV__ ? `Teleport` : ``);\r\nexport const SUSPENSE = Symbol(__DEV__ ? `Suspense` : ``);\r\nexport const KEEP_ALIVE = Symbol(__DEV__ ? `KeepAlive` : ``);\r\nexport const BASE_TRANSITION = Symbol(__DEV__ ? `BaseTransition` : ``);\r\nexport const OPEN_BLOCK = Symbol(__DEV__ ? `openBlock` : ``);\r\nexport const CREATE_BLOCK = Symbol(__DEV__ ? `createBlock` : ``);\r\nexport const CREATE_ELEMENT_BLOCK = Symbol(__DEV__ ? `createElementBlock` : ``);\r\nexport const CREATE_VNODE = Symbol(__DEV__ ? `createVNode` : ``);\r\nexport const CREATE_ELEMENT_VNODE = Symbol(__DEV__ ? `createElementVNode` : ``);\r\nexport const CREATE_COMMENT = Symbol(__DEV__ ? `createCommentVNode` : ``);\r\nexport const CREATE_TEXT = Symbol(__DEV__ ? `createTextVNode` : ``);\r\nexport const CREATE_STATIC = Symbol(__DEV__ ? `createStaticVNode` : ``);\r\nexport const RESOLVE_COMPONENT = Symbol(__DEV__ ? `resolveComponent` : ``);\r\nexport const RESOLVE_DYNAMIC_COMPONENT = Symbol(__DEV__ ? `resolveDynamicComponent` : ``);\r\nexport const RESOLVE_DIRECTIVE = Symbol(__DEV__ ? `resolveDirective` : ``);\r\nexport const RESOLVE_FILTER = Symbol(__DEV__ ? `resolveFilter` : ``);\r\nexport const WITH_DIRECTIVES = Symbol(__DEV__ ? `withDirectives` : ``);\r\nexport const RENDER_LIST = Symbol(__DEV__ ? `renderList` : ``);\r\nexport const RENDER_SLOT = Symbol(__DEV__ ? `renderSlot` : ``);\r\nexport const CREATE_SLOTS = Symbol(__DEV__ ? `createSlots` : ``);\r\nexport const TO_DISPLAY_STRING = Symbol(__DEV__ ? `toDisplayString` : ``);\r\nexport const MERGE_PROPS = Symbol(__DEV__ ? `mergeProps` : ``);\r\nexport const NORMALIZE_CLASS = Symbol(__DEV__ ? `normalizeClass` : ``);\r\nexport const NORMALIZE_STYLE = Symbol(__DEV__ ? `normalizeStyle` : ``);\r\nexport const NORMALIZE_PROPS = Symbol(__DEV__ ? `normalizeProps` : ``);\r\nexport const GUARD_REACTIVE_PROPS = Symbol(__DEV__ ? `guardReactiveProps` : ``);\r\nexport const TO_HANDLERS = Symbol(__DEV__ ? `toHandlers` : ``);\r\nexport const CAMELIZE = Symbol(__DEV__ ? `camelize` : ``);\r\nexport const CAPITALIZE = Symbol(__DEV__ ? `capitalize` : ``);\r\nexport const TO_HANDLER_KEY = Symbol(__DEV__ ? `toHandlerKey` : ``);\r\nexport const SET_BLOCK_TRACKING = Symbol(__DEV__ ? `setBlockTracking` : ``);\r\nexport const PUSH_SCOPE_ID = Symbol(__DEV__ ? `pushScopeId` : ``);\r\nexport const POP_SCOPE_ID = Symbol(__DEV__ ? `popScopeId` : ``);\r\nexport const WITH_CTX = Symbol(__DEV__ ? `withCtx` : ``);\r\nexport const UNREF = Symbol(__DEV__ ? `unref` : ``);\r\nexport const IS_REF = Symbol(__DEV__ ? `isRef` : ``);\r\nexport const WITH_MEMO = Symbol(__DEV__ ? `withMemo` : ``);\r\nexport const IS_MEMO_SAME = Symbol(__DEV__ ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nexport const helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nexport function registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\r\n","references":[]}
