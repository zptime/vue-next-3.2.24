{"code":"// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nexport function patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\r\n//# sourceMappingURL=class.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-dom/src/components/Transition.ts"],"map":"{\"version\":3,\"file\":\"class.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/runtime-dom/src/modules/class.ts\"],\"names\":[],\"mappings\":\"AAEA,wEAAwE;AACxE,iDAAiD;AACjD,MAAM,UAAU,UAAU,CAAC,EAAW,EAAE,KAAoB,EAAE,KAAc;IAC1E,0EAA0E;IAC1E,2EAA2E;IAC3E,wBAAwB;IACxB,MAAM,iBAAiB,GAAI,EAA4B,CAAC,IAAI,CAAA;IAC5D,IAAI,iBAAiB,EAAE;QACrB,KAAK,GAAG,CACN,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAC/D,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACZ;IACD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;KAC5B;SAAM,IAAI,KAAK,EAAE;QAChB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;KAChC;SAAM;QACL,EAAE,CAAC,SAAS,GAAG,KAAK,CAAA;KACrB;AACH,CAAC\"}"}
