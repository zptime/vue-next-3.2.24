{"code":"import { createCallExpression, createObjectExpression } from './ast';\r\nimport { MERGE_PROPS, TELEPORT, SUSPENSE, KEEP_ALIVE, BASE_TRANSITION, TO_HANDLERS, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS, CREATE_BLOCK, CREATE_ELEMENT_BLOCK, CREATE_VNODE, CREATE_ELEMENT_VNODE, WITH_MEMO, OPEN_BLOCK } from './runtimeHelpers';\r\nimport { isString, isObject, hyphenate, extend, NOOP } from '@vue/shared';\r\nimport { parseExpression } from '@babel/parser';\r\nexport const isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nexport const isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nexport function isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nexport const isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nexport const isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nexport const isMemberExpressionNode = __BROWSER__\r\n    ? NOOP\r\n    : (path, context) => {\r\n        try {\r\n            let ret = parseExpression(path, {\r\n                plugins: context.expressionPlugins\r\n            });\r\n            if (ret.type === 'TSAsExpression' || ret.type === 'TSTypeAssertion') {\r\n                ret = ret.expression;\r\n            }\r\n            return (ret.type === 'MemberExpression' ||\r\n                ret.type === 'OptionalMemberExpression' ||\r\n                ret.type === 'Identifier');\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\nexport const isMemberExpression = __BROWSER__\r\n    ? isMemberExpressionBrowser\r\n    : isMemberExpressionNode;\r\nexport function getInnerRange(loc, offset, length) {\r\n    __TEST__ && assert(offset <= loc.source.length);\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        __TEST__ && assert(offset + length <= loc.source.length);\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nexport function advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nexport function advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nexport function assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nexport function findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nexport function findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isBindKey(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nexport function isBindKey(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nexport function hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nexport function isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nexport function isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nexport function isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nexport function isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nexport function getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nexport function getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nexport function injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nexport function toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nexport function hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if (__DEV__) {\r\n                const exhaustiveCheck = node;\r\n                exhaustiveCheck;\r\n            }\r\n            return false;\r\n    }\r\n}\r\nexport function getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nexport function makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\r\n//# sourceMappingURL=utils.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/transformElement.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/node_modules/.pnpm/@babel+parser@7.15.8/node_modules/@babel/parser/typings/babel-parser.d.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/node_modules/.pnpm/@babel+types@7.15.6/node_modules/@babel/types/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/compiler-core/src/utils.ts\"],\"names\":[],\"mappings\":\"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\"}"}
