{"code":"import { getCurrentInstance } from '../component';\r\nimport { cloneVNode, Comment, isSameVNodeType, Fragment } from '../vnode';\r\nimport { warn } from '../warning';\r\nimport { isKeepAlive } from './KeepAlive';\r\nimport { toRaw } from '@vue/reactivity';\r\nimport { callWithAsyncErrorHandling } from '../errorHandling';\r\nimport { onBeforeUnmount, onMounted } from '../apiLifecycle';\r\nexport function useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if (__DEV__ && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if (__DEV__ &&\r\n                mode &&\r\n                mode !== 'in-out' && mode !== 'out-in' && mode !== 'default') {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\nif (__COMPAT__) {\r\n    BaseTransitionImpl.__isBuiltIn = true;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nexport const BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nexport function resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nexport function setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (__FEATURE_SUSPENSE__ && vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nexport function getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n//# sourceMappingURL=BaseTransition.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/component.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/vnode.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/warning.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/components/KeepAlive.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/reactivity/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/errorHandling.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/apiLifecycle.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/renderer.ts"],"map":"{\"version\":3,\"file\":\"BaseTransition.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/runtime-core/src/components/BaseTransition.ts\"],\"names\":[],\"mappings\":\"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\"}"}
