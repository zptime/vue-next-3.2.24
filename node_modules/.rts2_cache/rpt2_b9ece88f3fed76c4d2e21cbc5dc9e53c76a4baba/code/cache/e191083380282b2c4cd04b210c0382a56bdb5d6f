{"code":"import { createCompoundExpression, createObjectProperty, createSimpleExpression } from '../ast';\r\nimport { camelize, toHandlerKey } from '@vue/shared';\r\nimport { createCompilerError } from '../errors';\r\nimport { processExpression } from './transformExpression';\r\nimport { validateBrowserExpression } from '../validateExpression';\r\nimport { hasScopeRef, isMemberExpression } from '../utils';\r\nimport { TO_HANDLER_KEY } from '../runtimeHelpers';\r\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nexport const transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            const rawName = arg.content;\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content, context);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        // process the expression since it's been skipped\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n            isInlineStatement && context.addIdentifiers(`$event`);\r\n            exp = dir.exp = processExpression(exp, context, false, hasMultipleStatements);\r\n            isInlineStatement && context.removeIdentifiers(`$event`);\r\n            // with scope analysis, the function is hoistable if it has no reference\r\n            // to scope variables.\r\n            shouldCache =\r\n                context.cacheHandlers &&\r\n                    // unnecessary to cache inside v-once\r\n                    !context.inVOnce &&\r\n                    // runtime constants don't need to be cached\r\n                    // (this is analyzed by compileScript in SFC <script setup>)\r\n                    !(exp.type === 4 /* SIMPLE_EXPRESSION */ && exp.constType > 0) &&\r\n                    // #1541 bail if this is a member exp handler passed to a component -\r\n                    // we need to use the original function to preserve arity,\r\n                    // e.g. <transition> relies on checking cb.length to determine\r\n                    // transition end handling. Inline function is ok since its arity\r\n                    // is preserved even when cached.\r\n                    !(isMemberExp && node.tagType === 1 /* COMPONENT */) &&\r\n                    // bail if the function references closure variables (v-for, v-slot)\r\n                    // it must be passed fresh to avoid stale values.\r\n                    !hasScopeRef(exp, context.identifiers);\r\n            // If the expression is optimizable and is a member expression pointing\r\n            // to a function, turn it into invocation (and wrap in an arrow function\r\n            // below) so that it always accesses the latest value when called - thus\r\n            // avoiding the need to be patched.\r\n            if (shouldCache && isMemberExp) {\r\n                if (exp.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                    exp.content = `${exp.content} && ${exp.content}(...args)`;\r\n                }\r\n                else {\r\n                    exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\r\n                }\r\n            }\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? !__BROWSER__ && context.isTS\r\n                        ? `($event: any)`\r\n                        : `$event`\r\n                    : `${!__BROWSER__ && context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\r\n//# sourceMappingURL=vOn.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/errors.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/transformExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/validateExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/utils.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts"],"map":"{\"version\":3,\"file\":\"vOn.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/compiler-core/src/transforms/vOn.ts\"],\"names\":[],\"mappings\":\"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\"}"}
