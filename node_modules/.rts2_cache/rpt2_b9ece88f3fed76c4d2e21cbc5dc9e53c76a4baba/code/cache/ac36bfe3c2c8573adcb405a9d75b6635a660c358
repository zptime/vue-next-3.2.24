{"code":"/* eslint-disable no-restricted-globals */\r\nimport { isClassComponent } from './component';\r\nimport { queueJob, queuePostFlushCb } from './scheduler';\r\nimport { extend, getGlobalThis } from '@vue/shared';\r\nexport let isHmrUpdating = false;\r\nexport const hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif (__DEV__) {\r\n    getGlobalThis().__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nexport function registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nexport function unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, initialDef) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        initialDef: normalizeClassComponent(initialDef),\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction normalizeClassComponent(component) {\r\n    return isClassComponent(component) ? component.__vccOpts : component;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // update initial record (for not-yet-rendered component)\r\n    record.initialDef.render = newRender;\r\n    [...record.instances].forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n            normalizeClassComponent(instance.type).render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    newComp = normalizeClassComponent(newComp);\r\n    // update initial def (for not-yet-rendered components)\r\n    updateComponentDef(record.initialDef, newComp);\r\n    // create a snapshot which avoids the set being mutated during updates\r\n    const instances = [...record.instances];\r\n    for (const instance of instances) {\r\n        const oldComp = normalizeClassComponent(instance.type);\r\n        if (!hmrDirtyComponents.has(oldComp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            if (oldComp !== record.initialDef) {\r\n                updateComponentDef(oldComp, newComp);\r\n            }\r\n            // 2. mark definition dirty. This forces the renderer to replace the\r\n            // component on patch.\r\n            hmrDirtyComponents.add(oldComp);\r\n        }\r\n        // 3. invalidate options resolution cache\r\n        instance.appContext.optionsCache.delete(instance.type);\r\n        // 4. actually update\r\n        if (instance.ceReload) {\r\n            // custom element\r\n            hmrDirtyComponents.add(oldComp);\r\n            instance.ceReload(newComp.styles);\r\n            hmrDirtyComponents.delete(oldComp);\r\n        }\r\n        else if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n            // instance is the inner component of an async custom element\r\n            // invoke to reset styles\r\n            if (instance.parent.type.__asyncLoader &&\r\n                instance.parent.ceReload) {\r\n                instance.parent.ceReload(newComp.styles);\r\n            }\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    }\r\n    // 5. make sure to cleanup dirty hmr components after update\r\n    queuePostFlushCb(() => {\r\n        for (const instance of instances) {\r\n            hmrDirtyComponents.delete(normalizeClassComponent(instance.type));\r\n        }\r\n    });\r\n}\r\nfunction updateComponentDef(oldComp, newComp) {\r\n    extend(oldComp, newComp);\r\n    for (const key in oldComp) {\r\n        if (key !== '__file' && !(key in newComp)) {\r\n            delete oldComp[key];\r\n        }\r\n    }\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=hmr.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/component.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/scheduler.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts"],"map":"{\"version\":3,\"file\":\"hmr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/runtime-core/src/hmr.ts\"],\"names\":[],\"mappings\":\"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\"}"}
