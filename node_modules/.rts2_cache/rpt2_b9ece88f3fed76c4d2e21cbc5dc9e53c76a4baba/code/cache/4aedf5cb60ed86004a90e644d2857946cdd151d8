{"code":"import { toRaw, shallowReactive, trigger } from '@vue/reactivity';\r\nimport { EMPTY_OBJ, camelize, hyphenate, capitalize, isString, isFunction, isArray, isObject, hasOwn, toRawType, makeMap, isReservedProp, EMPTY_ARR, def, extend, isOn } from '@vue/shared';\r\nimport { warn } from './warning';\r\nimport { setCurrentInstance, unsetCurrentInstance } from './component';\r\nimport { isEmitListener } from './componentEmits';\r\nimport { InternalObjectKey } from './vnode';\r\nimport { createPropsDefaultThis } from './compat/props';\r\nimport { isCompatEnabled, softAssertCompatEnabled } from './compat/compatConfig';\r\nimport { shouldSkipAttr } from './compat/attrsFallthrough';\r\nexport function initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if (__DEV__) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nexport function updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !(__DEV__ &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (__COMPAT__) {\r\n                        if (isOn(key) && key.endsWith('Native')) {\r\n                            key = key.slice(0, -6); // remove Native postfix\r\n                        }\r\n                        else if (shouldSkipAttr(key, instance)) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if (__DEV__) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            if (__COMPAT__) {\r\n                if (key.startsWith('onHook:')) {\r\n                    softAssertCompatEnabled(\"INSTANCE_EVENT_HOOKS\" /* INSTANCE_EVENT_HOOKS */, instance, key.slice(2).toLowerCase());\r\n                }\r\n                if (key === 'inline-template') {\r\n                    continue;\r\n                }\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    ;\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                if (__COMPAT__) {\r\n                    if (isOn(key) && key.endsWith('Native')) {\r\n                        key = key.slice(0, -6); // remove Native postfix\r\n                    }\r\n                    else if (shouldSkipAttr(key, instance)) {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (!(key in attrs) || value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(__COMPAT__ &&\r\n                        isCompatEnabled(\"PROPS_DEFAULT_THIS\" /* PROPS_DEFAULT_THIS */, instance)\r\n                        ? createPropsDefaultThis(instance, props, key)\r\n                        : null, props);\r\n                    unsetCurrentInstance();\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nexport function normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__FEATURE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            if (__COMPAT__ && isFunction(raw)) {\r\n                raw = raw.options;\r\n            }\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if (__DEV__ && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if (__DEV__ && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if (__DEV__) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : ctor === null ? 'null' : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else if (expectedType === 'null') {\r\n        valid = value === null;\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(' | ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\r\n//# sourceMappingURL=componentProps.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/reactivity/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/warning.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/component.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/componentEmits.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/vnode.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/apiCreateApp.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/props.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/compatConfig.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/compatConfig.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/compat/attrsFallthrough.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/runtime-core/src/helpers/typeUtils.ts"],"map":"{\"version\":3,\"file\":\"componentProps.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/runtime-core/src/componentProps.ts\"],\"names\":[],\"mappings\":\"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\"}"}
