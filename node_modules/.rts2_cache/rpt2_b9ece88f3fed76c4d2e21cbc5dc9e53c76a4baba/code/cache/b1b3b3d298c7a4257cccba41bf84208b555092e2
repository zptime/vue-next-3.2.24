{"code":"import { createStructuralDirectiveTransform } from '../transform';\r\nimport { createSimpleExpression, createCallExpression, createFunctionExpression, createObjectExpression, createObjectProperty, createVNodeCall, createBlockStatement, createCompoundExpression } from '../ast';\r\nimport { createCompilerError } from '../errors';\r\nimport { getInnerRange, findProp, isTemplateNode, isSlotOutlet, injectProp, getVNodeBlockHelper, getVNodeHelper, findDir } from '../utils';\r\nimport { RENDER_LIST, OPEN_BLOCK, FRAGMENT, IS_MEMO_SAME } from '../runtimeHelpers';\r\nimport { processExpression } from './transformExpression';\r\nimport { validateBrowserExpression } from '../validateExpression';\r\nimport { PatchFlagNames } from '@vue/shared';\r\nexport const transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        if (!__BROWSER__ &&\r\n            context.prefixIdentifiers &&\r\n            keyProperty &&\r\n            keyProp.type !== 6 /* ATTRIBUTE */) {\r\n            // #2085 process :key expression needs to be processed in order for it\r\n            // to behave consistently for <template v-for> and <div v-for>.\r\n            // In the case of `<template v-for>`, the node is discarded and never\r\n            // traversed so its key expression won't be processed by the normal\r\n            // transforms.\r\n            keyProperty.value = processExpression(keyProperty.value, context);\r\n        }\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            (__DEV__ ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const isTemplate = isTemplateNode(node);\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if ((__DEV__ || !__BROWSER__) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    (__DEV__\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        // scope management\r\n        // inject identifiers to context\r\n        value && addIdentifiers(value);\r\n        key && addIdentifiers(key);\r\n        index && addIdentifiers(index);\r\n    }\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n            value && removeIdentifiers(value);\r\n            key && removeIdentifiers(key);\r\n            index && removeIdentifiers(index);\r\n        }\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nexport function parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if (!__BROWSER__ && context.prefixIdentifiers) {\r\n        result.source = processExpression(result.source, context);\r\n    }\r\n    if (__DEV__ && __BROWSER__) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if (!__BROWSER__ && context.prefixIdentifiers) {\r\n                result.key = processExpression(result.key, context, true);\r\n            }\r\n            if (__DEV__ && __BROWSER__) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if (!__BROWSER__ && context.prefixIdentifiers) {\r\n                    result.index = processExpression(result.index, context, true);\r\n                }\r\n                if (__DEV__ && __BROWSER__) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if (!__BROWSER__ && context.prefixIdentifiers) {\r\n            result.value = processExpression(result.value, context, true);\r\n        }\r\n        if (__DEV__ && __BROWSER__) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nexport function createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\r\n//# sourceMappingURL=vFor.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/errors.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/utils.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/transformExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/validateExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts"],"map":"{\"version\":3,\"file\":\"vFor.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/compiler-core/src/transforms/vFor.ts\"],\"names\":[],\"mappings\":\"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\"}"}
