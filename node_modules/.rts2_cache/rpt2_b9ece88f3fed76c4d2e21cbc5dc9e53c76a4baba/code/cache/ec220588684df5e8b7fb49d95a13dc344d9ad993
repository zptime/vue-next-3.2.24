{"code":"import { createObjectExpression, createObjectProperty, createSimpleExpression, createFunctionExpression, createConditionalExpression, createCallExpression, createArrayExpression } from '../ast';\r\nimport { createCompilerError } from '../errors';\r\nimport { findDir, isTemplateNode, assert, isVSlot, hasScopeRef, isStaticExp } from '../utils';\r\nimport { CREATE_SLOTS, RENDER_LIST, WITH_CTX } from '../runtimeHelpers';\r\nimport { parseForExpression, createForLoopParams } from './vFor';\r\nimport { slotFlagsText } from '@vue/shared';\r\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nexport const trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            const slotProps = vSlot.exp;\r\n            if (!__BROWSER__ && context.prefixIdentifiers) {\r\n                slotProps && context.addIdentifiers(slotProps);\r\n            }\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                if (!__BROWSER__ && context.prefixIdentifiers) {\r\n                    slotProps && context.removeIdentifiers(slotProps);\r\n                }\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nexport const trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nexport function buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // with `prefixIdentifiers: true`, this can be further optimized to make\r\n    // it dynamic only when the slot actually uses the scope variables.\r\n    if (!__BROWSER__ && !context.ssr && context.prefixIdentifiers) {\r\n        hasDynamicSlots = hasScopeRef(node, context.identifiers);\r\n    }\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                __TEST__ && assert(dynamicSlots.length > 0);\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (__COMPAT__ && context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + (__DEV__ ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\r\n//# sourceMappingURL=vSlot.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/errors.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/utils.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/vFor.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts"],"map":"{\"version\":3,\"file\":\"vSlot.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/compiler-core/src/transforms/vSlot.ts\"],\"names\":[],\"mappings\":\"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\"}"}
