{"code":"import { createStructuralDirectiveTransform, traverseNode } from '../transform';\r\nimport { createCallExpression, createConditionalExpression, createSimpleExpression, createObjectProperty, createObjectExpression, createVNodeCall, locStub } from '../ast';\r\nimport { createCompilerError } from '../errors';\r\nimport { processExpression } from './transformExpression';\r\nimport { validateBrowserExpression } from '../validateExpression';\r\nimport { FRAGMENT, CREATE_COMMENT } from '../runtimeHelpers';\r\nimport { injectProp, findDir, findProp, isBuiltInType, makeBlock } from '../utils';\r\nimport { PatchFlagNames } from '@vue/shared';\r\nimport { getMemoedVNodeCall } from '..';\r\nexport const transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nexport function processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if (!__BROWSER__ && context.prefixIdentifiers && dir.exp) {\r\n        // dir.exp can only be simple expression because vIf transform is applied\r\n        // before expression transform.\r\n        dir.exp = processExpression(dir.exp, context);\r\n    }\r\n    if (__DEV__ && __BROWSER__ && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if (__DEV__ && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if (__DEV__ &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if (__DEV__ || !__BROWSER__) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            __DEV__ ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if (__DEV__ &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (__DEV__ ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=vIf.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/errors.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/transformExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/validateExpression.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/utils.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/index.ts"],"map":"{\"version\":3,\"file\":\"vIf.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/compiler-core/src/transforms/vIf.ts\"],\"names\":[],\"mappings\":\"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\"}"}
