{"code":"import { createCallExpression } from '../ast';\r\nimport { isText } from '../utils';\r\nimport { CREATE_TEXT } from '../runtimeHelpers';\r\nimport { PatchFlagNames } from '@vue/shared';\r\nimport { getConstantType } from './hoistStatic';\r\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nexport const transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(__COMPAT__ && node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            (__DEV__ ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n//# sourceMappingURL=transformText.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transform.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/ast.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/utils.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/runtimeHelpers.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/shared/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/transforms/hoistStatic.ts"],"map":"{\"version\":3,\"file\":\"transformText.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../packages/compiler-core/src/transforms/transformText.ts\"],\"names\":[],\"mappings\":\"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\"}"}
