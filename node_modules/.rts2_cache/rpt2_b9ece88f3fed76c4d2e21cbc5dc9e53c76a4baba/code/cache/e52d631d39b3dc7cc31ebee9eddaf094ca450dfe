{"code":"import namedCharacterReferences from './namedChars.json';\r\n// lazy compute this to make this file tree-shakable for browser\r\nlet maxCRNameLength;\r\nexport const decodeHtml = (rawText, asAttr) => {\r\n    let offset = 0;\r\n    const end = rawText.length;\r\n    let decodedText = '';\r\n    function advance(length) {\r\n        offset += length;\r\n        rawText = rawText.slice(length);\r\n    }\r\n    while (offset < end) {\r\n        const head = /&(?:#x?)?/i.exec(rawText);\r\n        if (!head || offset + head.index >= end) {\r\n            const remaining = end - offset;\r\n            decodedText += rawText.slice(0, remaining);\r\n            advance(remaining);\r\n            break;\r\n        }\r\n        // Advance to the \"&\".\r\n        decodedText += rawText.slice(0, head.index);\r\n        advance(head.index);\r\n        if (head[0] === '&') {\r\n            // Named character reference.\r\n            let name = '';\r\n            let value = undefined;\r\n            if (/[0-9a-z]/i.test(rawText[1])) {\r\n                if (!maxCRNameLength) {\r\n                    maxCRNameLength = Object.keys(namedCharacterReferences).reduce((max, name) => Math.max(max, name.length), 0);\r\n                }\r\n                for (let length = maxCRNameLength; !value && length > 0; --length) {\r\n                    name = rawText.slice(1, 1 + length);\r\n                    value = namedCharacterReferences[name];\r\n                }\r\n                if (value) {\r\n                    const semi = name.endsWith(';');\r\n                    if (asAttr &&\r\n                        !semi &&\r\n                        /[=a-z0-9]/i.test(rawText[name.length + 1] || '')) {\r\n                        decodedText += '&' + name;\r\n                        advance(1 + name.length);\r\n                    }\r\n                    else {\r\n                        decodedText += value;\r\n                        advance(1 + name.length);\r\n                    }\r\n                }\r\n                else {\r\n                    decodedText += '&' + name;\r\n                    advance(1 + name.length);\r\n                }\r\n            }\r\n            else {\r\n                decodedText += '&';\r\n                advance(1);\r\n            }\r\n        }\r\n        else {\r\n            // Numeric character reference.\r\n            const hex = head[0] === '&#x';\r\n            const pattern = hex ? /^&#x([0-9a-f]+);?/i : /^&#([0-9]+);?/;\r\n            const body = pattern.exec(rawText);\r\n            if (!body) {\r\n                decodedText += head[0];\r\n                advance(head[0].length);\r\n            }\r\n            else {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\n                let cp = Number.parseInt(body[1], hex ? 16 : 10);\r\n                if (cp === 0) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp > 0x10ffff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if (cp >= 0xd800 && cp <= 0xdfff) {\r\n                    cp = 0xfffd;\r\n                }\r\n                else if ((cp >= 0xfdd0 && cp <= 0xfdef) || (cp & 0xfffe) === 0xfffe) {\r\n                    // noop\r\n                }\r\n                else if ((cp >= 0x01 && cp <= 0x08) ||\r\n                    cp === 0x0b ||\r\n                    (cp >= 0x0d && cp <= 0x1f) ||\r\n                    (cp >= 0x7f && cp <= 0x9f)) {\r\n                    cp = CCR_REPLACEMENTS[cp] || cp;\r\n                }\r\n                decodedText += String.fromCodePoint(cp);\r\n                advance(body[0].length);\r\n            }\r\n        }\r\n    }\r\n    return decodedText;\r\n};\r\n// https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\r\nconst CCR_REPLACEMENTS = {\r\n    0x80: 0x20ac,\r\n    0x82: 0x201a,\r\n    0x83: 0x0192,\r\n    0x84: 0x201e,\r\n    0x85: 0x2026,\r\n    0x86: 0x2020,\r\n    0x87: 0x2021,\r\n    0x88: 0x02c6,\r\n    0x89: 0x2030,\r\n    0x8a: 0x0160,\r\n    0x8b: 0x2039,\r\n    0x8c: 0x0152,\r\n    0x8e: 0x017d,\r\n    0x91: 0x2018,\r\n    0x92: 0x2019,\r\n    0x93: 0x201c,\r\n    0x94: 0x201d,\r\n    0x95: 0x2022,\r\n    0x96: 0x2013,\r\n    0x97: 0x2014,\r\n    0x98: 0x02dc,\r\n    0x99: 0x2122,\r\n    0x9a: 0x0161,\r\n    0x9b: 0x203a,\r\n    0x9c: 0x0153,\r\n    0x9e: 0x017e,\r\n    0x9f: 0x0178\r\n};\r\n//# sourceMappingURL=decodeHtml.js.map","references":["/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-core/src/index.ts","/Users/zhangpian/Documents/projects/github/vue-next-3.2.24/packages/compiler-dom/src/namedChars.json"],"map":"{\"version\":3,\"file\":\"decodeHtml.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/compiler-dom/src/decodeHtml.ts\"],\"names\":[],\"mappings\":\"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\"}"}
